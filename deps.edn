{:paths ["src" "resources"]

 :deps  {;;;
         ;; see https://github.com/babashka/fs/blob/master/API.md
         babashka/fs                      {:mvn/version "0.5.22"}

         ;; see https://github.com/borkdude/edamame?tab=readme-ov-file#usage
         borkdude/edamame                 {:mvn/version "1.4.27"}

         ;; see https://github.com/taoensso/truss/blob/master/wiki/1-Getting-started.md#have-variants
         com.health-samurai/matcho        {:mvn/version "0.3.11"}

         ;; see https://github.com/taoensso/truss?tab=readme-ov-file#quick-example
         com.taoensso/truss               {:mvn/version "1.11.0"}

         ;; see https://github.com/henryw374/time-literals?tab=readme-ov-file#time-literals
         com.widdindustries/time-literals {:mvn/version "0.1.10"}

         ;; see https://github.com/djblue/portal/blob/master/doc/ui/viewers.md#default-viewers
         djblue/portal                    {:mvn/version "RELEASE"}
         lambdaisland/deep-diff2          {:mvn/version "2.11.216"} ;; support :portal.viewer/diff

         ;; see https://github.com/gnarroway/hato?tab=readme-ov-file#output-coercion
         hato/hato                        {:mvn/version "1.0.0"}
         cheshire/cheshire                {:mvn/version "5.13.0"} ;; support (hc/get "http://moo.com" {:as :json})
         com.cognitect/transit-clj        {:mvn/version "1.0.333"} ;; support (hc/get "http://moo.com" {:as :transit+json})

         ;; see https://github.com/ardumont/vinyasa?tab=readme-ov-file#inject
         im.chit/vinyasa.inject           {:mvn/version "0.2.0"}

         ;; see https://github.com/lambdaisland/data-printers?tab=readme-ov-file#readers
         lambdaisland/data-printers       {:mvn/version "0.7.47"}
         cider/cider-nrepl                {:mvn/version "0.50.1"} ;; see https://metaredux.com/posts/2019/12/05/pimp-my-print-method-prettier-clojure-built-in-types.html
         mvxcvi/puget                     {:mvn/version "1.3.4"}
         org.clojure/java.classpath       {:mvn/version "1.1.0"}

         ;; see https://github.com/metosin/malli?tab=readme-ov-file#coercion
         metosin/malli                    {:mvn/version "0.16.3"}

         ;; see https://github.com/tolitius/mount?tab=readme-ov-file#how
         mount/mount                      {:mvn/version "0.1.19"}
         tolitius/mount-up                {:mvn/version "0.1.3"}
         ch.qos.logback/logback-classic   {:mvn/version "1.5.7"}

         ;;
         org.clojure/clojure              {:mvn/version "1.11.4"}

         ;; see https://github.com/clojure/test.check/blob/master/doc/cheatsheet.md
         org.clojure/test.check           {:mvn/version "1.1.1"}
         ;; see https://github.com/gfredericks/test.chuck?tab=readme-ov-file#usage
         com.gfredericks/test.chuck       {:mvn/version "0.2.13"}

         ;; see https://github.com/clojure/tools.namespace?tab=readme-ov-file#reloading-code-usage
         org.clojure/tools.namespace      {:mvn/version "1.5.0"}

         ;; see https://github.com/jgrodziski/talltale?tab=readme-ov-file#all-available-generators
         talltale/talltale                {:mvn/version "0.5.14"}

         ;; see https://github.com/vvvvalvalval/scope-capture?tab=readme-ov-file#usage
         ;; (require 'sc.api)
         ;; (sc.api/spy ...) ;; insert a `spy` call in the scope of these locals
         ;; (sc.api/defsc 7) ;; recreate the scope by def-ing Vars
         vvvvalvalval/scope-capture       {:mvn/version "0.3.3"}
         ;;;
         }

 :aliases
 {:test
  {:extra-paths ["test"]
   :extra-deps  {;;
                 io.github.cognitect-labs/test-runner {:git/tag "v0.5.1" :git/sha "dfb30dd"}
                 ;;
                 }}

  :build
  {:deps       {;;
                io.github.clojure/tools.build {:git/tag "v0.9.2" :git/sha "fe6b140"}
                slipset/deps-deploy           {:mvn/version "0.2.0"}
                ;;
                }
   :ns-default build}

  :neil
  {:project {:name clj-dev-toolbox/clj-dev-toolbox}}}}
